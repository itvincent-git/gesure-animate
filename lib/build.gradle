apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

ext {
    artifact_id = 'gestureanimate'
}

android {
    compileSdkVersion _compileSdkVersion
    defaultConfig {
        minSdkVersion _minSdkVersion
        targetSdkVersion _targetSdkVersion
    }
    compileOptions {
        kotlinOptions.freeCompilerArgs += ['-module-name', "$group_id.$artifact_id"]
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation ("net.slog:slog-api:$slog_version") {
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'org.jetbrains.kotlinx'
    }
    compileOnly "com.android.support:support-annotations:${support_version}"
    implementation "com.android.support:design:${support_version}"
}

//private below
apply plugin: 'digital.wup.android-maven-publish'
apply plugin: 'signing'
apply plugin: 'net.researchgate.release'
release {
    failOnUnversionedFiles = false
    failOnCommitNeeded = false
    failOnUpdateNeeded = false
    failOnPublishNeeded = false
    failOnSnapshotDependencies = false
    buildTasks = ['publish'] ////定义发布时该执行哪个task
    versionPropertyFile = '../gradle.properties'
}

def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}

def getReleaseRepositoryUrl() {
    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
}

def getSnapshotRepositoryUrl() {
    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
            : "https://oss.sonatype.org/content/repositories/snapshots/"
}

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

publishing {
    publications {
        mavenAar(MavenPublication) {
            groupId "$group_id"
            artifactId "$artifact_id"
            version "$release_version"
            from components.android
            artifact sourcesJar
            sourceSets {
                main {
                    java {
                        include '**/*.java'
                        include '**/*.kt'
                    }
                }
            }
        }
    }
}

publishing {
    repositories {
        maven {
            credentials {
                username = getRepositoryUsername()
                password = getRepositoryPassword()
            }

            if(isReleaseBuild()) {
                url getReleaseRepositoryUrl()
            } else {
                url getSnapshotRepositoryUrl()
            }
        }
    }
}
